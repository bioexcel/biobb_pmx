{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://bioexcel.eu/biobb_pmx/json_schemas/1.0/pmxanalyse",
    "name": "biobb_pmx Pmxanalyse",
    "title": "Wrapper class for the PMX analyse module.",
    "description": "Analyze the work values from the dgdl.xvg files of the A and B states to calculate the free energy difference between two states.",
    "type": "object",
    "info": {
        "wrapped_software": {
            "name": "PMX analyse",
            "version": ">=1.0.1",
            "license": "GNU"
        },
        "ontology": {
            "name": "EDAM",
            "schema": "http://edamontology.org/EDAM.owl"
        }
    },
    "required": [
        "input_a_xvg_zip_path",
        "input_b_xvg_zip_path",
        "output_result_path",
        "output_work_plot_path"
    ],
    "properties": {
        "input_a_xvg_zip_path": {
            "type": "string",
            "description": "Path the zip file containing the dgdl.xvg files of the A state",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_pmx/raw/master/biobb_pmx/test/data/pmx/xvg_A.zip",
            "enum": [
                ".*\\.zip$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.zip$",
                    "description": "Path the zip file containing the dgdl.xvg files of the A state",
                    "edam": "format_3987"
                }
            ]
        },
        "input_b_xvg_zip_path": {
            "type": "string",
            "description": "Path the zip file containing the dgdl.xvg files of the B state",
            "filetype": "input",
            "sample": "https://github.com/bioexcel/biobb_pmx/raw/master/biobb_pmx/test/data/pmx/xvg_B.zip",
            "enum": [
                ".*\\.zip$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.zip$",
                    "description": "Path the zip file containing the dgdl.xvg files of the B state",
                    "edam": "format_3987"
                }
            ]
        },
        "output_result_path": {
            "type": "string",
            "description": "Path to the TXT results file",
            "filetype": "output",
            "sample": "https://github.com/bioexcel/biobb_pmx/raw/master/biobb_pmx/test/reference/pmx/ref_result.txt",
            "enum": [
                ".*\\.txt$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.txt$",
                    "description": "Path to the TXT results file",
                    "edam": "format_2330"
                }
            ]
        },
        "output_work_plot_path": {
            "type": "string",
            "description": "Path to the PNG plot results file",
            "filetype": "output",
            "sample": "https://github.com/bioexcel/biobb_pmx/raw/master/biobb_pmx/test/reference/pmx/ref_plot.png",
            "enum": [
                ".*\\.png$"
            ],
            "file_formats": [
                {
                    "extension": ".*\\.png$",
                    "description": "Path to the PNG plot results file",
                    "edam": "format_3603"
                }
            ]
        },
        "properties": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "default": "CGI BAR JARZ",
                    "wf_prop": false,
                    "description": "Choose one or more estimators to use. ",
                    "enum": [
                        "CGI",
                        "BAR",
                        "JARZ"
                    ],
                    "property_formats": [
                        {
                            "name": "CGI",
                            "description": "Crooks Gaussian Intersection"
                        },
                        {
                            "name": "BAR",
                            "description": "Bennet Acceptance Ratio"
                        },
                        {
                            "name": "JARZ",
                            "description": "Jarzynski's estimator"
                        }
                    ]
                },
                "temperature": {
                    "type": "number",
                    "default": 298.15,
                    "wf_prop": false,
                    "description": "Temperature in Kelvin.",
                    "min": 0.0,
                    "max": 1000.0,
                    "step": 0.05
                },
                "nboots": {
                    "type": "integer",
                    "default": 0,
                    "wf_prop": false,
                    "description": "Number of bootstrap samples to use for the bootstrap estimate of the standard errors.",
                    "min": 0,
                    "max": 1000,
                    "step": 1
                },
                "nblocks": {
                    "type": "integer",
                    "default": 1,
                    "wf_prop": false,
                    "description": "Number of blocks to divide the data into for an estimate of the standard error.",
                    "min": 0,
                    "max": 1000,
                    "step": 1
                },
                "integ_only": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": false,
                    "description": "Whether to do integration only."
                },
                "reverseB": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": false,
                    "description": "Whether to reverse the work values for the backward (B->A) transformation."
                },
                "skip": {
                    "type": "integer",
                    "default": 1,
                    "wf_prop": false,
                    "description": "Skip files.",
                    "min": 0,
                    "max": 1000,
                    "step": 1
                },
                "slice": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Subset of trajectories to analyze. Provide list slice, e.g. \"10 50\" will result in selecting dhdl_files[10:50]."
                },
                "rand": {
                    "type": "integer",
                    "default": null,
                    "wf_prop": false,
                    "description": "Take a random subset of trajectories. Default is None (do not take random subset).",
                    "min": 0,
                    "max": 1000,
                    "step": 1
                },
                "index": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Zero-based index of files to analyze (e.g. \"0 10 20 50 60\"). It keeps the dhdl.xvg files according to their position in the list, sorted according to the filenames."
                },
                "prec": {
                    "type": "integer",
                    "default": 2,
                    "wf_prop": false,
                    "description": "The decimal precision of the screen/file output.",
                    "min": 0,
                    "max": 100,
                    "step": 1
                },
                "units": {
                    "type": "string",
                    "default": "kJ",
                    "wf_prop": false,
                    "description": "The units of the output. ",
                    "enum": [
                        "kJ",
                        "kcal",
                        "kT"
                    ],
                    "property_formats": [
                        {
                            "name": "kJ",
                            "description": "Kilojoules"
                        },
                        {
                            "name": "kcal",
                            "description": "Kilocalories"
                        },
                        {
                            "name": "kT",
                            "description": "the product of the Boltzmann constant k and the temperature"
                        }
                    ]
                },
                "no_ks": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": false,
                    "description": "Whether to do a Kolmogorov-Smirnov test to check whether the Gaussian assumption for CGI holds."
                },
                "nbins": {
                    "type": "integer",
                    "default": 20,
                    "wf_prop": false,
                    "description": "Number of histograms bins for the plot.",
                    "min": 0,
                    "max": 1000,
                    "step": 1
                },
                "dpi": {
                    "type": "integer",
                    "default": 300,
                    "wf_prop": false,
                    "description": "Resolution of the plot.",
                    "min": 72,
                    "max": 2048,
                    "step": 1
                },
                "binary_path": {
                    "type": "string",
                    "default": "pmx",
                    "wf_prop": false,
                    "description": "Path to the PMX command line interface."
                },
                "remove_tmp": {
                    "type": "boolean",
                    "default": true,
                    "wf_prop": true,
                    "description": "Remove temporal files."
                },
                "restart": {
                    "type": "boolean",
                    "default": false,
                    "wf_prop": true,
                    "description": "Do not execute if output files exist."
                },
                "sandbox_path": {
                    "type": "string",
                    "default": "./",
                    "wf_prop": true,
                    "description": "Parent path to the sandbox directory."
                },
                "container_path": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Path to the binary executable of your container."
                },
                "container_image": {
                    "type": "string",
                    "default": "gromacs/gromacs:latest",
                    "wf_prop": false,
                    "description": "Container Image identifier."
                },
                "container_volume_path": {
                    "type": "string",
                    "default": "/data",
                    "wf_prop": false,
                    "description": "Path to an internal directory in the container."
                },
                "container_working_dir": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "Path to the internal CWD in the container."
                },
                "container_user_id": {
                    "type": "string",
                    "default": null,
                    "wf_prop": false,
                    "description": "User number id to be mapped inside the container."
                },
                "container_shell_path": {
                    "type": "string",
                    "default": "/bin/bash",
                    "wf_prop": false,
                    "description": "Path to the binary executable of the container shell."
                }
            }
        }
    },
    "additionalProperties": false
}